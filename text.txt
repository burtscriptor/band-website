// oringingal filter function based on filtering the data stored in the dataContext,
// deployed so that we wouldn;t hvae to call supabase mulitple times
// but have since decided to use SQL and call supabase

export function filterAlbums(albums, userFilters, setFilter){
   

    const filterFunction =( key: string, value: string, data: any[] )=>{
        return data.filter((element) => element[key] === value);
     };
     
     const loadFilters=()=>{
         let filterData = albums;
     
         for(let filter of userFilters){
             const key = Object.keys(filter)[0];
             const value = Object.values(filter)[0];
     
            filterData = filterFunction(key, value, filterData) 
         }
     
         return filterData
     };
     
     let result = loadFilters();
     console.log(result);
     setFilter(false);
     return result;

};

 const captureFilters=(event: React.ChangeEvent<HTMLSelectElement>)=>{
      const name = event.target.name;
      const value = event.target.value;
      let newFilter = { [name]: value };

      setUserFilters((prev: userFilters[])=> {
        const filterKey = Object.keys(newFilter)[0];
        const filterExists = prev.some((f)=> Object.keys(f)[0] === filterKey);

        if(filterExists) {
            return prev.map((f)=> {
               return Object.keys(f)[0] === filterKey ? newFilter : f;
            });
        } else {
            return [...prev, newFilter];
        }
      });
      
    };